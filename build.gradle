plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'org.ajoberstar.grgit' version '3.1.1'
	id 'com.github.breadmoirai.github-release' version '2.2.12'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
// Adds a few utility methods like getProjectProperty
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/utilities.gradle'
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/fabric/publish/changelog.gradle'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	runs {
		gametest {
			server()
			source sourceSets.testmod

			name "Game Test"

			// Enable the gametest runner
			vmArg "-Dfabric-api.gametest"
			vmArg "-Dfabric-api.gametest.report-file=${project.buildDir}/junit.xml"
			runDir "build/gametest"
		}
		autoTestServer {
			server()
			source sourceSets.testmod

			name "Auto Test Server"

			vmArg "-Dfabric.autoTest"
		}
	}
}
check.dependsOn runGametest

repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		url = 'https://maven.jamieswhiteshirt.com/libs-release/'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven {
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
		content {
			includeGroup 'me.lucko'
		}
	}
	maven {
		name "fall flying lib"
		url "https://maven.cafeteria.dev"
	}
	maven {
		name "cloth config"
		url "https://maven.shedaniel.me/"
	}
	maven {
		name "mod menu"
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url = 'https://jitpack.io'
		content {
			includeGroupByRegex '(com|io)\\.github\\..*'
		}
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"

//	modCompileOnly "io.github.ladysnake:requiem-api:${requiem_version}"
//	modCompileOnly "io.github.ladysnake:requiem-core:${requiem_version}"
//	modCompileOnly "io.github.ladysnake:requiem:${requiem_version}"
//	modCompileOnly "io.github.ladysnake:requiem:${requiem_version}"
//
//	// Made available when Requiem is present
//	modCompileOnly "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
//	modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.+"
//	modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:4.+"
//
//	modCompileOnly "com.github.apace100:origins-fabric:${origins_version}"
//	modRuntimeOnly "com.github.apace100:origins-fabric:${origins_version}"

	runtimeOnly "me.zeroeightsix:fiber:0.23.0-2"

	testmodImplementation sourceSets.main.output
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

apply from: 'release.gradle'